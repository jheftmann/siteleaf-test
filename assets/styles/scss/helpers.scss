/* variables */

//color
$black: #000;
$white: #fff;
$red: #ff0000;


// base measures
$baseline: 20px;
$base-font-size: 14px;
$base-line-height: 20px;

.padded-lg {padding: ($baseline * 4) 0;}
.padded {padding: ($baseline * 2) 0;}
.padded-sm {padding: ($baseline) 0;}


// components



//typography
.text-center {text-align: center;}
.text-left {text-align: left;}
.text-right {text-align: right;}

.uppercase {text-transform: uppercase;}

@font-face {
    font-family: 'apercumono';
    src: url('../../fonts/apercu_mono-webfont.eot');
    src: url('../../fonts/apercu_mono-webfont.eot?#iefix') format('embedded-opentype'),
         url('../../fonts/apercu_mono-webfont.woff') format('woff'),
         url('../../fonts/apercu_mono-webfont.ttf') format('truetype'),
         url('../../fonts/apercu_mono-webfont.svg#apercumono') format('svg');
    font-weight: normal;
    font-style: normal;

}


// media queries
$breakpoint-sm: 480px;
$breakpoint-med: 768px;
$breakpoint-max: 1200px;
$breakpoint-lg: 980px;

@mixin respond-to($media) {
  @if $media == mobile {
    @media only screen and (max-width: $breakpoint-sm) { @content; }
  }
  @else if $media == tablet {
    @media only screen and (max-width: $breakpoint-med - 1) { @content; }
  }
  @else if $media == desktop {
    @media only screen and (min-width: $breakpoint-med) and (max-width: $breakpoint-lg - 1) { @content; }
  }
  @else if $media == desktop-lg {
    @media only screen and (min-width: $breakpoint-max) { @content; }
  }
}

/*
* example *
.profile-pic {
  @include respond-to(mobile) { width: 100% ;}
  @include respond-to(tablet) { width: 125px; }
  @include respond-to(desktop-lg) { float: none; }
}
*/
//////

/* utlities */
.d {
border-bottom: 1px solid $red;
border-top: 1px solid $red;
background-color: fade($red, 10%);
}

.hyphenate {
-webkit-hyphens: auto;
-moz-hyphens: auto;
hyphens: auto;
}

.full-width {
margin-right: -20px;
margin-left: -20px;
}

.add-transition {
transition: all .1s ease-in-out;
-moz-transition: all .1s ease-in-out;
-webkit-transition: all .1s ease-in-out;
-o-transition: all .1s ease-in-out;
}

@mixin opacity($opacity) {
-khtml-opacity: $opacity;
-moz-opacity: $opacity;
opacity: $opacity;
}

@mixin transform-scale($value) {
	 -moz-transform: scale($value);
-webkit-transform: scale($value);
				transform: scale($value);
}

@mixin transition($type, $speed, $easing) {
	-webkit-transition: $type $speed $easing;
	   -moz-transition: $type $speed $easing;
       -o-transition: $type $speed $easing;
          transition: $type $speed $easing;
}

@mixin rounded($radius) {
-moz-border-radius: $radius;
-webkit-border-radius: $radius;
-khtml-border-radius: $radius;
border-radius: $radius;
}